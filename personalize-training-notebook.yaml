---
AWSTemplateFormatVersion: "2010-09-09"

Description: "Create Amazon Personalize resources for Customer Intent Prediction Blog Article"

Parameters:

  ResourceBucket:
    Type: String
    Description: S3Bucket Bucket where the Resources are stored (CloudFormation, data files, Lambda code)

  PersonalizeResourceBucketRelativePath:
    Type: String
    Description: S3Bucket path for personalize source code. S3 key that ends with the filename

Resources:

  CustomPersonalizeServiceRole: 
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
          -
            Effect: "Allow"
            Principal: 
              Service: 
                - "personalize.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/service-role/"
      Policies: 
        - 
          PolicyName: "PersonalizeUserPolicy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: 
                  - codecommit:*
                Resource: !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:personalize*"
              - 
                Effect: Allow
                Action:
                  - personalize:*
                Resource: "*"
              - 
                Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                  - cloudwatch:ListMetrics
                Resource: "*"
              - 
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:DeleteBucket
                  - s3:CreateBucket
                  - s3:ListBucket
                  - s3:PutBucketPolicy
                Resource:
                  - "arn:aws:s3:::*Personalize*"
                  - "arn:aws:s3:::*personalize*"
              - 
                Effect: Allow
                Action: "iam:PassRole"
                Resource: "*"
                Condition:
                  StringEquals:
                    "iam:PassedToService": personalize.amazonaws.com
              - 
                Effect: Allow
                Action: "iam:GetRole"
                Resource: "*"
    
  Coderepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: personalize-connect-demo-repo
      RepositoryDescription: CodeCommit Repo for the personalize demo notebook
      Code:
        S3:
          Bucket: !Ref ResourceBucket
          Key: !Ref PersonalizeResourceBucketRelativePath 
    
  NotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      NotebookInstanceName: personalize-connect-demo-notebook
      InstanceType: "ml.t2.medium"
      RoleArn: !GetAtt CustomPersonalizeServiceRole.Arn
      DefaultCodeRepository: !GetAtt Coderepo.CloneUrlHttp

Outputs:
    NotebookInstanceId:
      Value: !Ref NotebookInstance
    PersonalizeRoleARN:
      Value: !GetAtt CustomPersonalizeServiceRole.Arn
